// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStoreDataStore.Context;

namespace MusicStoreDataStore.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20200531131210_Initial-seeds& Fixes")]
    partial class InitialseedsFixes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicStoreDataStore.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumArt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("MSAlbum");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumArt = "images/albumArt.jpg",
                            ArtistId = 1,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(1369),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(1758),
                            Name = "Castle Of Glass"
                        },
                        new
                        {
                            Id = 2,
                            AlbumArt = "images/albumArt.jpg",
                            ArtistId = 1,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2407),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2559),
                            Name = "Evolution"
                        },
                        new
                        {
                            Id = 3,
                            AlbumArt = "images/albumArt.jpg",
                            ArtistId = 2,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2577),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2579),
                            Name = "Thunder"
                        },
                        new
                        {
                            Id = 4,
                            AlbumArt = "images/albumArt.jpg",
                            ArtistId = 2,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2580),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2582),
                            Name = "Deamons"
                        },
                        new
                        {
                            Id = 5,
                            AlbumArt = "images/albumArt.jpg",
                            ArtistId = 3,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2583),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2584),
                            Name = "The A-Team"
                        },
                        new
                        {
                            Id = 6,
                            AlbumArt = "images/albumArt.jpg",
                            ArtistId = 3,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2585),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 465, DateTimeKind.Local).AddTicks(2587),
                            Name = "Divide"
                        });
                });

            modelBuilder.Entity("MusicStoreDataStore.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MSArtist");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 462, DateTimeKind.Local).AddTicks(4230),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 463, DateTimeKind.Local).AddTicks(8425),
                            LastName = "Park",
                            Name = "Linkin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 463, DateTimeKind.Local).AddTicks(8907),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 463, DateTimeKind.Local).AddTicks(8937),
                            LastName = "Dragons",
                            Name = "Imagine"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 5, 31, 18, 42, 10, 463, DateTimeKind.Local).AddTicks(8948),
                            Date = new DateTime(2020, 5, 31, 18, 42, 10, 463, DateTimeKind.Local).AddTicks(8949),
                            LastName = "Sheren",
                            Name = "Ed"
                        });
                });

            modelBuilder.Entity("MusicStoreDataStore.Models.Album", b =>
                {
                    b.HasOne("MusicStoreDataStore.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
